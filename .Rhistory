"Que los estudiantes hayan desarrollado aquellas habilidades de aprendizaje necesarias para emprender estudios posteriores con un alto grado de autonomía"))
library(tidyverse)
library(kableExtra)
tabla %>%
mutate_all(linebreak) %>%
knitr::kable(tabla, row.names = FALSE, col.names = c(" ", "Competencia"), format = "latex", booktabs = T, escape=T, caption = "\\label{compbasicas} Competencias Básicas en la Titulación de Administración y Dirección de Empresas")  %>%
kable_styling(font_size = 7.5) %>%
column_spec(1, width = "3em")%>%
column_spec(2, width = "27em") %>%
kable_as_image("competenciasbasicas")
tabla %>%
mutate_all(linebreak) %>%
knitr::kable(tabla, row.names = FALSE, col.names = c(" ", "Competencia"), format = "latex", booktabs = T, escape=T, caption = "\\label{compbasicas} Competencias Básicas en la Titulación de Administración y Dirección de Empresas")  %>%
kable_styling(font_size = 7.5) %>%
column_spec(1, width = "3em")%>%
column_spec(2, width = "27em") %>%
kable_as_image("competenciasbasicas")
Sys.setenv(R_GSCMD="C:/Program Files/gs/gs9.22/bin/gswin64.exe")
tabla %>%
mutate_all(linebreak) %>%
knitr::kable(tabla, row.names = FALSE, col.names = c(" ", "Competencia"), format = "latex", booktabs = T, escape=T, caption = "\\label{compbasicas} Competencias Básicas en la Titulación de Administración y Dirección de Empresas")  %>%
kable_styling(font_size = 7.5) %>%
column_spec(1, width = "3em")%>%
column_spec(2, width = "27em") %>%
kable_as_image("competenciasbasicas")
knitr::opts_chunk$set(echo = TRUE)
htmlTable::htmlTable(tabla)
library(htmlTable)
htmlTable(tabla)
htmlTable(tabla)
tabla <- data.frame(stringsAsFactors=FALSE,
competencia = c("CB1", "CB2" , "CB3", "CB4", "CB5"),
enunciado=c("Que los estudiantes hayan demostrado poseer y comprender conocimientos en un área de estudio que parte de la base de la educación secundaria general, y se suele encontrar a un nivel que, si bien se apoya en libros de texto avanzados, incluye también algunos aspectos que implican conocimientos procedentes de la vanguardia de su campo de estudio",
"Que los estudiantes sepan aplicar sus conocimientos a su trabajo o vocación de una forma profesional y posean las competencias que suelen demostrarse por medio de la elaboración y defensa de argumentos y la resolución de problemas dentro de su área de estudio",
"Que los estudiantes tengan la capacidad de reunir e interpretar datos relevantes (normalmente dentro de su área de estudio) para emitir juicios que incluyan una reflexión sobre temas relevantes de índole social, científica o ética",
"Que los estudiantes puedan transmitir información, ideas, problemas y soluciones a un público tanto especializado como no especializado",
"Que los estudiantes hayan desarrollado aquellas habilidades de aprendizaje necesarias para emprender estudios posteriores con un alto grado de autonomía"))
library(htmlTable)
htmlTable(tabla)
100-30
tabla2 <- data.frame(stringsAsFactors=FALSE,
Criterios = c("a.1. Trabajo durante el curso", "a.2. Entregas para las lecturas", "a.3. Desempeño en el examen final", "b.1. Proyecto de Análisis", "b.2. Casos en grupo"),
Ponderacion=c("10%", "10%", "40%", "20%", "20%"))
library(htmlTable        )
htmlTable(tabla2)
tabla 2
xaringan::summon_remark()
setwd("D:/Dropbox/0_Plaza/1_defensaoffline")
xaringan::summon_remark()
setwd("D:/Dropbox/0_Plaza/1_Defensa")
library(plotly)
trace1 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("87", "83", "82", "80", "85", "73"),
name = "Mat 1ª Opción ADE",
type = "bar",
uid = "297288",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:54888b"
)
trace2 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("91", "83", "100", "100", "100", "100"),
marker = list(color = "rgb(214, 39, 40)"),
name = "Mat 1ª Opción ADE-ECO",
type = "bar",
uid = "04b78d",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:3b88de"
)
trace3 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("100", "100", "100", "100", "100", "100"),
marker = list(color = "rgb(148, 103, 189)"),
name = "Mat 1ª Opción ADE_Dcho",
type = "bar",
uid = "62c2f9",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:7c1cc2"
)
trace4 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("5.992", "6.67", "6.543", "5.62", "6.172", "6.31"),
connectgaps = FALSE,
line = list(
color = "rgb(31, 119, 180)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota Corte Ade",
type = "scatter",
uid = "2199e2",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:1ff661"
)
trace5 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("9.064", "9.367", "9.703", "10.902", "10.028", "10.85"),
line = list(
color = "rgb(214, 39, 40)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota corte ADE_Eco",
type = "scatter",
uid = "1b5ab6",
xaxis = "x",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:bfbea2"
)
trace6 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("9.619", "10.78", "9.804", "10.792", "9.907", "10.94"),
line = list(
color = "rgb(148, 103, 189)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota Corte ADE_Dcho",
type = "scatter",
uid = "034582",
xaxis = "x",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:c32348"
)
data <- list(trace1, trace2, trace3, trace4, trace5, trace6)
layout <- list(
bargap = 0.34,
bargroupgap = 0.09,
font = list(family = "Roboto"),
hovermode = "closest",
legend = list(
font = list(family = "Roboto"),
orientation = "h"
),
margin = list(
r = 100,
b = 160,
pad = 2
),
showlegend = TRUE,
title = "Porcentaje de Matrícula en Primera Opción",
titlefont = list(family = "Roboto"),
xaxis = list(
autorange = TRUE,
range = c(-0.5, 5.5),
titlefont = list(size = 16),
type = "category"
),
yaxis = list(
autorange = TRUE,
domain = c(0, 0.45),
range = c(0, 105.263157895),
title = "% Matrícula",
titlefont = list(size = 16),
type = "linear"
),
yaxis2 = list(
anchor = "x",
autorange = FALSE,
domain = c(0.55, 1),
range = c(5, 14),
ticks = "",
title = "Nota de Corte",
titlefont = list(size = 16),
type = "linear"
)
)
p <- plot_ly()
p <- add_trace(p, x=trace1$x, y=trace1$y, name=trace1$name, type=trace1$type, uid=trace1$uid, xsrc=trace1$xsrc, ysrc=trace1$ysrc)
p <- add_trace(p, x=trace2$x, y=trace2$y, marker=trace2$marker, name=trace2$name, type=trace2$type, uid=trace2$uid, xsrc=trace2$xsrc, ysrc=trace2$ysrc)
p <- add_trace(p, x=trace3$x, y=trace3$y, marker=trace3$marker, name=trace3$name, type=trace3$type, uid=trace3$uid, xsrc=trace3$xsrc, ysrc=trace3$ysrc)
p <- add_trace(p, x=trace4$x, y=trace4$y, connectgaps=trace4$connectgaps, line=trace4$line, marker=trace4$marker, mode=trace4$mode, name=trace4$name, type=trace4$type, uid=trace4$uid, xsrc=trace4$xsrc, yaxis=trace4$yaxis, ysrc=trace4$ysrc)
p <- add_trace(p, x=trace5$x, y=trace5$y, line=trace5$line, marker=trace5$marker, mode=trace5$mode, name=trace5$name, type=trace5$type, uid=trace5$uid, xaxis=trace5$xaxis, xsrc=trace5$xsrc, yaxis=trace5$yaxis, ysrc=trace5$ysrc)
p <- add_trace(p, x=trace6$x, y=trace6$y, line=trace6$line, marker=trace6$marker, mode=trace6$mode, name=trace6$name, type=trace6$type, uid=trace6$uid, xaxis=trace6$xaxis, xsrc=trace6$xsrc, yaxis=trace6$yaxis, ysrc=trace6$ysrc)
p <- layout(p, bargap=layout$bargap, bargroupgap=layout$bargroupgap, font=layout$font, hovermode=layout$hovermode, legend=layout$legend, margin=layout$margin, showlegend=layout$showlegend, title=layout$title, titlefont=layout$titlefont, xaxis=layout$xaxis, yaxis=layout$yaxis, yaxis2=layout$yaxis2)
p
library(tidyverse)
library(extrafont)
library(grid)
library(RColorBrewer)
loadfonts(device = "win")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
gradoplazas_graph$Titulo<-factor(gradoplazas_graph$CentroTitul,
levels=c("Enfermería","Fisioterapia",
"Maestro en Educación Primaria",
"Maestro en Educación Infantil",
"Trabajo Social",
"Sociología Aplicada",
"Ingeniería Agroalimentaria y del Medio Rural",
"DG Ing. Agroalimentaria Medio Rural y Innovación Procesos y Productos Alimentarios",
"Innovación de Procesos y Productos Alimentarios",
"Ingeniería en Tecnologías Industriales",
"Ingeniería Mecánica",
"Ingeniería Informática",
"Ingeniería Eléctrica y Electrónica",
"Ingeniería Tecnologías de Telecomunicación",
"Ingeniería Diseño Mecánico",
"Derecho",
"Relaciones Laborales y Recursos Humanos",
"DG Administración y Dirección Empresas y  Derecho",
"Administración y Dirección de Empresas",
"Economía",
"DG Int.  Administración y Dirección Empresas y Economía"
))
g<-ggplot(gradoplazas_graph)+
geom_bar(alpha=1/3,mapping=(aes(x=Titulo, y=Plazas, fill=Centro)), stat="identity")+
geom_bar(alpha=2/3, mapping=(aes(x=Titulo, y=Matriculadas, fill=Centro)), stat="identity")+
coord_flip()+
theme_minimal()+
labs(y = "Número de Plazas (ofertadas/matriculadas) 2016/2017") +
xlab(NULL)+
theme(text=element_text(size=14,  family="Roboto"))+
theme(title=element_text(size=14,  family="Roboto"))+
theme(legend.position=c(-0.65,0.85))+
scale_fill_brewer(palette="Set1")
svg(filename="gradoplazas_graph.svg",
width=12,
height=14,
pointsize=12)
ggplot(gradoplazas_graph)+
geom_bar(alpha=1/3,mapping=(aes(x=Titulo, y=Plazas, fill=Centro)), stat="identity")+
geom_bar(alpha=2/3, mapping=(aes(x=Titulo, y=Matriculadas, fill=Centro)), stat="identity")+
coord_flip()+
theme_minimal()+
ylab(NULL) +
xlab(NULL)+
theme(text=element_text(size=16,  family="Roboto"))+
theme(title=element_text(size=16,  family="Roboto"))+
theme(legend.position=c(-1.2,0.9))+
scale_fill_brewer(palette="Dark2")
dev.off()
g<- ggplot(gradoplazas_graph)+
geom_bar(alpha=1/3,mapping=(aes(x=Titulo, y=Plazas, fill=Centro)), stat="identity")+
geom_bar(alpha=2/3, mapping=(aes(x=Titulo, y=Matriculadas, fill=Centro)), stat="identity")+
coord_flip()+
theme_minimal()+
ylab(NULL) +
xlab(NULL)+
theme(text=element_text(size=16,  family="Roboto"))+
theme(title=element_text(size=16,  family="Roboto"))+
theme(legend.position=c(-1.2,0.9))
library(plotly)
ggplotly(g)
library(tidyverse)
library(extrafont)
library(grid)
library(RColorBrewer)
loadfonts(device = "win")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
gradoplazas_graph$Titulo<-factor(gradoplazas_graph$CentroTitul,
levels=c("Enfermería","Fisioterapia",
"Maestro en Educación Primaria",
"Maestro en Educación Infantil",
"Trabajo Social",
"Sociología Aplicada",
"Ingeniería Agroalimentaria y del Medio Rural",
"DG Ing. Agroalimentaria Medio Rural y Innovación Procesos y Productos Alimentarios",
"Innovación de Procesos y Productos Alimentarios",
"Ingeniería en Tecnologías Industriales",
"Ingeniería Mecánica",
"Ingeniería Informática",
"Ingeniería Eléctrica y Electrónica",
"Ingeniería Tecnologías de Telecomunicación",
"Ingeniería Diseño Mecánico",
"Derecho",
"Relaciones Laborales y Recursos Humanos",
"DG Administración y Dirección Empresas y  Derecho",
"Administración y Dirección de Empresas",
"Economía",
"DG Int.  Administración y Dirección Empresas y Economía"
))
g<-ggplot(gradoplazas_graph)+
geom_bar(alpha=1/3,mapping=(aes(x=Titulo, y=Plazas, fill=Centro)), stat="identity")+
geom_bar(alpha=2/3, mapping=(aes(x=Titulo, y=Matriculadas, fill=Centro)), stat="identity")+
coord_flip()+
theme_minimal()+
labs(y = "Número de Plazas (ofertadas/matriculadas) 2016/2017") +
xlab(NULL)+
theme(text=element_text(size=14,  family="Roboto"))+
theme(title=element_text(size=14,  family="Roboto"))+
theme(legend.position=c(-0.65,0.85))+
scale_fill_brewer(palette="Set1")
library(tidyverse)
library(extrafont)
library(grid)
library(RColorBrewer)
loadfonts(device = "win")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
setwd("D:/Dropbox/0_Plaza/1_ProyectoDocente/figures")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
setwd("D:/Dropbox/0_Plaza/1_ProyectoDocente/data")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
setwd("D:/Dropbox/0_Plaza/1_ProyectoDocente/data")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
View(gradoplazas_graph)
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
setwd("D:/Dropbox/0_Plaza/1_ProyectoDocente")
gradoplazas_graph <- read_csv("data/gradoplazas_graph.csv")
gradoplazas_graph$Centro<-factor(gradoplazas_graph$Centro,
levels=c("FCCEE","FCJ/FCCEE",
"FCJ", "ETSIIT",
"ETSIA", "FHHSS", "FCS"))
gradoplazas_graph$Titulo<-factor(gradoplazas_graph$CentroTitul,
levels=c("Enfermería","Fisioterapia",
"Maestro en Educación Primaria",
"Maestro en Educación Infantil",
"Trabajo Social",
"Sociología Aplicada",
"Ingeniería Agroalimentaria y del Medio Rural",
"DG Ing. Agroalimentaria Medio Rural y Innovación Procesos y Productos Alimentarios",
"Innovación de Procesos y Productos Alimentarios",
"Ingeniería en Tecnologías Industriales",
"Ingeniería Mecánica",
"Ingeniería Informática",
"Ingeniería Eléctrica y Electrónica",
"Ingeniería Tecnologías de Telecomunicación",
"Ingeniería Diseño Mecánico",
"Derecho",
"Relaciones Laborales y Recursos Humanos",
"DG Administración y Dirección Empresas y  Derecho",
"Administración y Dirección de Empresas",
"Economía",
"DG Int.  Administración y Dirección Empresas y Economía"
))
g<-ggplot(gradoplazas_graph)+
geom_bar(alpha=1/3,mapping=(aes(x=Titulo, y=Plazas, fill=Centro)), stat="identity")+
geom_bar(alpha=2/3, mapping=(aes(x=Titulo, y=Matriculadas, fill=Centro)), stat="identity")+
coord_flip()+
theme_minimal()+
labs(y = "Número de Plazas (ofertadas/matriculadas) 2016/2017") +
xlab(NULL)+
theme(text=element_text(size=14,  family="Roboto"))+
theme(title=element_text(size=14,  family="Roboto"))+
theme(legend.position=c(-0.65,0.85))+
scale_fill_brewer(palette="Set1")
g
library(plotly)
trace1 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("87", "83", "82", "80", "85", "73"),
name = "Mat 1ª Opción ADE",
type = "bar",
uid = "297288",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:54888b"
)
trace2 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("91", "83", "100", "100", "100", "100"),
marker = list(color = "rgb(214, 39, 40)"),
name = "Mat 1ª Opción ADE-ECO",
type = "bar",
uid = "04b78d",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:3b88de"
)
trace3 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("100", "100", "100", "100", "100", "100"),
marker = list(color = "rgb(148, 103, 189)"),
name = "Mat 1ª Opción ADE_Dcho",
type = "bar",
uid = "62c2f9",
xsrc = "mcortinas:27:1b117d",
ysrc = "mcortinas:27:7c1cc2"
)
trace4 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("5.992", "6.67", "6.543", "5.62", "6.172", "6.31"),
connectgaps = FALSE,
line = list(
color = "rgb(31, 119, 180)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota Corte Ade",
type = "scatter",
uid = "2199e2",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:1ff661"
)
trace5 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("9.064", "9.367", "9.703", "10.902", "10.028", "10.85"),
line = list(
color = "rgb(214, 39, 40)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota corte ADE_Eco",
type = "scatter",
uid = "1b5ab6",
xaxis = "x",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:bfbea2"
)
trace6 <- list(
x = c("A2011_12", "A2012_13", "A2013_14", "A2014_15", "A2015_16", "A2016_17 (A)"),
y = c("9.619", "10.78", "9.804", "10.792", "9.907", "10.94"),
line = list(
color = "rgb(148, 103, 189)",
shape = "spline"
),
marker = list(size = 8),
mode = "lines+markers",
name = "Nota Corte ADE_Dcho",
type = "scatter",
uid = "034582",
xaxis = "x",
xsrc = "mcortinas:27:1b117d",
yaxis = "y2",
ysrc = "mcortinas:27:c32348"
)
data <- list(trace1, trace2, trace3, trace4, trace5, trace6)
layout <- list(
bargap = 0.34,
bargroupgap = 0.09,
font = list(family = "Roboto"),
hovermode = "closest",
legend = list(
font = list(family = "Roboto"),
orientation = "h"
),
margin = list(
r = 100,
b = 160,
pad = 2
),
showlegend = TRUE,
title = "Porcentaje de Matrícula en Primera Opción",
titlefont = list(family = "Roboto"),
xaxis = list(
autorange = TRUE,
range = c(-0.5, 5.5),
titlefont = list(size = 16),
type = "category"
),
yaxis = list(
autorange = TRUE,
domain = c(0, 0.45),
range = c(0, 105.263157895),
title = "% Matrícula",
titlefont = list(size = 16),
type = "linear"
),
yaxis2 = list(
anchor = "x",
autorange = FALSE,
domain = c(0.55, 1),
range = c(5, 14),
ticks = "",
title = "Nota de Corte",
titlefont = list(size = 16),
type = "linear"
)
)
p <- plot_ly()
p <- add_trace(p, x=trace1$x, y=trace1$y, name=trace1$name, type=trace1$type, uid=trace1$uid, xsrc=trace1$xsrc, ysrc=trace1$ysrc)
p <- add_trace(p, x=trace2$x, y=trace2$y, marker=trace2$marker, name=trace2$name, type=trace2$type, uid=trace2$uid, xsrc=trace2$xsrc, ysrc=trace2$ysrc)
p <- add_trace(p, x=trace3$x, y=trace3$y, marker=trace3$marker, name=trace3$name, type=trace3$type, uid=trace3$uid, xsrc=trace3$xsrc, ysrc=trace3$ysrc)
p <- add_trace(p, x=trace4$x, y=trace4$y, connectgaps=trace4$connectgaps, line=trace4$line, marker=trace4$marker, mode=trace4$mode, name=trace4$name, type=trace4$type, uid=trace4$uid, xsrc=trace4$xsrc, yaxis=trace4$yaxis, ysrc=trace4$ysrc)
p <- add_trace(p, x=trace5$x, y=trace5$y, line=trace5$line, marker=trace5$marker, mode=trace5$mode, name=trace5$name, type=trace5$type, uid=trace5$uid, xaxis=trace5$xaxis, xsrc=trace5$xsrc, yaxis=trace5$yaxis, ysrc=trace5$ysrc)
p <- add_trace(p, x=trace6$x, y=trace6$y, line=trace6$line, marker=trace6$marker, mode=trace6$mode, name=trace6$name, type=trace6$type, uid=trace6$uid, xaxis=trace6$xaxis, xsrc=trace6$xsrc, yaxis=trace6$yaxis, ysrc=trace6$ysrc)
p <- layout(p, bargap=layout$bargap, bargroupgap=layout$bargroupgap, font=layout$font, hovermode=layout$hovermode, legend=layout$legend, margin=layout$margin, showlegend=layout$showlegend, title=layout$title, titlefont=layout$titlefont, xaxis=layout$xaxis, yaxis=layout$yaxis, yaxis2=layout$yaxis2)
p %>%
export(file = "indicadores.pdf",
selenium = RSelenium::rsDriver(browser = "chrome"))
g
p
g
g
g
